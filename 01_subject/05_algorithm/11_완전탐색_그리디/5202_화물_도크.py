# 화물 도크

# 24시간 운영되는 물류센터에는 화물을 싣고 내리는 도크가 설치되어 있다.
# 0시부터 다음날 0시 이전까지 A도크의 사용신청을 확인해 최대한 많은 화물차가 화물을 싣고 내릴 수 있도록 하면,
# 최대 몇 대의 화물차가 이용할 수 있는지 알아내 출력하는 프로그램을 만드시오.
# 신청서에는 작업 시작 시간과 완료 시간이 매시 정각을 기준으로 표시되어 있고,
# 앞 작업의 종료와 동시에 다음 작업을 시작할 수 있다.
# 예를 들어 앞 작업의 종료 시간이 5시면 다음 작업의 시작 시간은 5시부터 가능하다

# 첫 줄에 테스트케이스의 수 T가 주어진다. 1<=T<=50 다음 줄부터 테스트 케이스의 별로 첫 줄에 신청서
# N이 주어지고, 다음 줄부터 N개의 줄에 걸쳐 화물차의 작업 시작 시간 s와 종료 시간 e가 주어진다.
# 1<=N<=100, 0<=s<24, 0 ＜ e ＜= 24

T = int(input())                                # case 입력
for tc in range(1, T+1):                        # case 반복
    N = int(input())                            # 신청서 개수
    work = []                                   # 작업 리스트
    for i in range(N):                          # 반복해서
        s, e = list(map(int, input().split()))  # 시작시간 종료 시간 입력
        work.append((s, e))                     # 추가
    work.sort(key=lambda x: (x[1], x[0]))       # 종료시간먼저 정렬하고 시작시간으로 정렬
    cnt = 1                                     # 개수 는 1
    first = work[0][1]                          # 첫 작업 종료 시간
    for i in range(1, N):                       # 반복해서
        if work[i][0] >= first:                 # 시작시간이 첫 작업종료보다 크다면
            cnt += 1                            # 카운트 추가하고
            first = work[i][1]                  # 종료시간을 갱신
    print("#{} {}".format(tc, cnt))